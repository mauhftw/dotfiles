#!/usr/bin/env bash

set -x

# Checks if script is running as root
if [ $UID -ne 0 ]; then
  echo "You must run this script as root..."
  exit 1
fi

#############
## Variables
#############
readonly USERNAME=$(grep '1000:1000' /etc/passwd | awk -F ':' '{print $1}')

####################################
# System utilities and dependencies  
####################################
apt-get update \
&& apt-get install -y \
  htop \
  gnome-menus \
  desktop-file-utils \
  docker.io \
  alacritty \
  evdi-dkms \
  gnome-browser-connector \
  xclip \
  nmap \
  curl \
  jq \
  unzip \
  git \
  nmap \
  tig \
  tmux \
  progress \
  vim \
  apt-transport-https \
  python3 \
  cmake \
  python3-pip \
  ca-certificates \
  software-properties-common 

########################
## Apps
########################

# Install tfenv
(
  cd /tmp
  rm -rf /home/${USERNAME}/.tfenv
  git clone --depth=1 https://github.com/tfutils/tfenv.git /home/${USERNAME}/.tfenv
  ln -s ~/.tfenv/bin/* /usr/local/bin
  chown ${USERNAME}:${USERNAME} -R  /home/${USERNAME}/.tfenv
)

# Install AWSCLI
(
  cd /tmp
  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  unzip awscliv2.zip
  ./aws/install
)

# Install Obsidian
(
  OBISIDIAN_RELEASE=$(curl --silent "https://api.github.com/repos/obsidianmd/obsidian-releases/releases/latest" | jq .tag_name -r)
  VERSION=$(echo "$OBISIDIAN_RELEASE" | cut -d 'v' -f2)
  cd /tmp \
  && wget https://github.com/obsidianmd/obsidian-releases/releases/download/${OBISIDIAN_RELEASE}/obsidian_${VERSION}_amd64.deb -O obsidian.deb \
  && dpkg -i obsidian.deb || true \
  && apt-get install -fy
)

# Install Alacritty Themes
(
  ## Themes
  mkdir -p /home/${USERNAME}/.config/alacritty/themes
  git clone https://github.com/alacritty/alacritty-theme /home/${USERNAME}/.config/alacritty/themes
)

# Install VSCode
(
  echo "code code/add-microsoft-repo boolean true" | sudo debconf-set-selections
  wget https://go.microsoft.com/fwlink/?LinkID=760868 -O /tmp/vscode.deb
  sudo apt install vscode.deb
)

# Install slack
(
  cd /tmp
  wget https://slack.com/downloads/instructions/linux?ddl=1&build=deb -O slack.deb
  sudo dpkg -i slack.deb
)

# Install zoom
(
  cd /tmp \
  && wget https://zoom.us/client/latest/zoom_amd64.deb -O zoom.deb \
  && dpkg -i zoom.deb || true  \
  && apt-get -fy install
)

## Install ulauncher
# (
#   ULAUNCHER_RELEASE=$(curl --silent "https://api.github.com/repos/Ulauncher/Ulauncher/releases/latest" | jq .tag_name -r)
#   cd /tmp \
#   && wget https://github.com/Ulauncher/Ulauncher/releases/download/${ULAUNCHER_RELEASE}/ulauncher_${ULAUNCHER_RELEASE}_all.deb -O ulauncher.deb \
#   && dpkg -i ulauncher.deb || true \
#   && apt-get install -fy
# )

## Install spotify
# curl -sS https://download.spotify.com/debian/pubkey.gpg | sudo apt-key add - \
# && echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list \
# && apt-get update \
# && apt-get install -y spotify-client

# Install Youtube music
(
  sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
  YT_RELEASE=$(curl --silent "https://api.github.com/repos/th-ch/youtube-music/releases/latest" | jq .tag_name -r)
  VERSION=$(echo "$YT_RELEASE" | cut -d 'v' -f2)
  cd /tmp \
  && wget https://github.com/th-ch/youtube-music/releases/download/${YT_RELEASE}/youtube-music_${VERSION}_amd64.deb -O yt.deb \
  && sudo dpkg -i yt.deb || true \
  && apt-get install -fy
)

# Install google-chrome
(
  cd /tmp \
  && wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O chrome.deb \
  && apt install ./chrome.deb || true \
  && apt-get install -fy
)

# Install kubectl
(
  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  chmod +x kubectl
  sudo mv kubectl /usr/local/bin
)

# Install minikube
curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \
&& chmod +x minikube \
&& mv minikube /usr/local/bin

# Install helm
(
  HELM_RELEASE=$(curl --silent "https://api.github.com/repos/helm/helm/releases/latest" | jq .tag_name -r)
  cd /tmp \
  && wget https://get.helm.sh/helm-${HELM_RELEASE}-linux-amd64.tar.gz -O helm.tar.gz \
  && tar zxf helm.tar.gz \
  && mv linux-amd64/helm /usr/local/bin
)

##################################
## Source custom_bashrc as user
##################################
if ! grep -w '.custom_bashrc' /home/${USERNAME}/.bashrc; then
  echo "source /home/${USERNAME}/dotfiles/config/.custom_bashrc" >> /home/${USERNAME}/.bashrc
fi

###########################
## Clear dependencies
###########################
rm -rf /tmp/*
